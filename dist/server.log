2016-04-10T18:53:58.368Z - info: Logging durch Winston ist konfiguriert
2016-04-10T18:54:01.519Z - debug: > Server.start()
2016-04-10T18:54:01.534Z - debug: < Server.start(): result = void || undefined
2016-04-10T18:54:01.547Z - info: Der Server ist gestartet: https://localhost:8443
2016-04-10T18:54:01.708Z - info: Die Verbindung zu MongoDB ist hergestellt
2016-04-10T18:54:15.532Z - debug: > SharedRequestHandler.logRequestHeader(): args = <RequestResponse>
2016-04-10T18:54:15.532Z - debug: Request: headers={
  "host": "localhost:8443",
  "connection": "keep-alive",
  "authorization": "Basic Og==",
  "cache-control": "no-cache",
  "user-agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36",
  "postman-token": "f3593140-c3c3-0237-63be-5f54b6024361",
  "accept": "*/*",
  "accept-encoding": "gzip, deflate",
  "accept-language": "de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4"
}
2016-04-10T18:54:15.533Z - debug: Request: protocol="https"
2016-04-10T18:54:15.533Z - debug: Request: hostname="localhost"
2016-04-10T18:54:15.539Z - debug: > VideosRouter.getByQuery(): args = <RequestResponse>
2016-04-10T18:54:15.539Z - debug: queryParams = {}
2016-04-10T18:54:15.540Z - debug: > VideosService.find(): args = [{}]
2016-04-10T18:54:15.542Z - debug: < VideosService.find(): result = <Promise>
2016-04-10T18:54:15.542Z - debug: < VideosRouter.getByQuery(): result = void || undefined
2016-04-10T18:54:15.542Z - debug: < SharedRequestHandler.logRequestHeader(): result = void || undefined
2016-04-10T18:54:15.566Z - debug: getByQuery(): buecher = [{"_id":"000000000000000000000001","titel":"Alpha","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Tiervideo","altersbeschränkung":0,"videopfad":"C:/Videos","kanal":[],"genere":[]},{"_id":"000000000000000000000002","titel":"Beta","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Actionvideo","altersbeschränkung":12,"videopfad":"C:/Videos","kanal":[],"genere":[]},{"_id":"000000000000000000000003","titel":"Gamma","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Horrorvideo","altersbeschränkung":18,"videopfad":"C:/Videos","kanal":[],"genere":[]},{"_id":"000000000000000000000004","titel":"Hugo","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Sportvideo","altersbeschränkung":0,"videopfad":"C:/Videos","kanal":[],"genere":[]},{"_id":"000000000000000000000005","titel":"Karl","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Modevideo","altersbeschränkung":0,"videopfad":"C:/Videos","kanal":[],"genere":[]},{"_id":"000000000000000000000006","titel":"Otto","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Tiervideo","altersbeschränkung":0,"videopfad":"C:/Videos","kanal":[],"genere":[]}]
2016-04-10T19:05:08.455Z - info: Logging durch Winston ist konfiguriert
2016-04-10T19:05:08.585Z - debug: > Server.start()
2016-04-10T19:05:08.597Z - debug: < Server.start(): result = void || undefined
2016-04-10T19:05:08.608Z - info: Der Server ist gestartet: https://localhost:8443
2016-04-10T19:05:08.710Z - info: Die Verbindung zu MongoDB ist hergestellt
2016-04-10T19:05:15.000Z - debug: > SharedRequestHandler.logRequestHeader(): args = <RequestResponse>
2016-04-10T19:05:15.000Z - debug: Request: headers={
  "host": "localhost:8443",
  "connection": "keep-alive",
  "authorization": "Basic Og==",
  "cache-control": "no-cache",
  "user-agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36",
  "postman-token": "453e057e-64fa-b5de-c26e-57416516e5d7",
  "accept": "*/*",
  "accept-encoding": "gzip, deflate",
  "accept-language": "de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4"
}
2016-04-10T19:05:15.000Z - debug: Request: protocol="https"
2016-04-10T19:05:15.001Z - debug: Request: hostname="localhost"
2016-04-10T19:05:15.007Z - debug: > VideosRouter.getByQuery(): args = <RequestResponse>
2016-04-10T19:05:15.007Z - debug: queryParams = {}
2016-04-10T19:05:15.007Z - debug: > VideosService.find(): args = [{}]
2016-04-10T19:05:15.009Z - debug: < VideosService.find(): result = <Promise>
2016-04-10T19:05:15.010Z - debug: < VideosRouter.getByQuery(): result = void || undefined
2016-04-10T19:05:15.010Z - debug: < SharedRequestHandler.logRequestHeader(): result = void || undefined
2016-04-10T19:05:15.018Z - debug: getByQuery(): videos = [{"_id":"000000000000000000000001","titel":"Alpha","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Tiervideo","altersbeschränkung":0,"videopfad":"C:/Videos"},{"_id":"000000000000000000000002","titel":"Beta","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Actionvideo","altersbeschränkung":12,"videopfad":"C:/Videos"},{"_id":"000000000000000000000003","titel":"Gamma","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Horrorvideo","altersbeschränkung":18,"videopfad":"C:/Videos"},{"_id":"000000000000000000000004","titel":"Hugo","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Sportvideo","altersbeschränkung":0,"videopfad":"C:/Videos"},{"_id":"000000000000000000000005","titel":"Karl","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Modevideo","altersbeschränkung":0,"videopfad":"C:/Videos"},{"_id":"000000000000000000000006","titel":"Otto","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Tiervideo","altersbeschränkung":0,"videopfad":"C:/Videos"}]
2016-04-10T19:05:52.824Z - debug: > SharedRequestHandler.logRequestHeader(): args = <RequestResponse>
2016-04-10T19:05:52.825Z - debug: Request: headers={
  "host": "localhost:8443",
  "connection": "keep-alive",
  "authorization": "Basic Og==",
  "cache-control": "no-cache",
  "user-agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36",
  "postman-token": "764b0142-dce4-0cc0-9dd6-197589fb8684",
  "accept": "*/*",
  "accept-encoding": "gzip, deflate",
  "accept-language": "de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4"
}
2016-04-10T19:05:52.825Z - debug: Request: protocol="https"
2016-04-10T19:05:52.825Z - debug: Request: hostname="localhost"
2016-04-10T19:05:52.827Z - debug: > VideosRouter.getByQuery(): args = <RequestResponse>
2016-04-10T19:05:52.827Z - debug: queryParams = {"altersbeschränkung":"11"}
2016-04-10T19:05:52.828Z - debug: > VideosService.find(): args = [{"altersbeschränkung":"11"}]
2016-04-10T19:05:52.829Z - debug: < VideosService.find(): result = <Promise>
2016-04-10T19:05:52.829Z - debug: < VideosRouter.getByQuery(): result = void || undefined
2016-04-10T19:05:52.829Z - debug: < SharedRequestHandler.logRequestHeader(): result = void || undefined
2016-04-10T19:05:52.832Z - debug: getByQuery(): videos = []
2016-04-10T19:05:52.832Z - debug: status = 404
2016-04-10T19:06:01.351Z - debug: > SharedRequestHandler.logRequestHeader(): args = <RequestResponse>
2016-04-10T19:06:01.351Z - debug: Request: headers={
  "host": "localhost:8443",
  "connection": "keep-alive",
  "authorization": "Basic Og==",
  "cache-control": "no-cache",
  "user-agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36",
  "postman-token": "348d41ee-36d4-bb78-c23e-93eaf5947e03",
  "accept": "*/*",
  "accept-encoding": "gzip, deflate",
  "accept-language": "de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4"
}
2016-04-10T19:06:01.351Z - debug: Request: protocol="https"
2016-04-10T19:06:01.351Z - debug: Request: hostname="localhost"
2016-04-10T19:06:01.352Z - debug: > VideosRouter.getByQuery(): args = <RequestResponse>
2016-04-10T19:06:01.352Z - debug: queryParams = {"titel":"Z"}
2016-04-10T19:06:01.352Z - debug: > VideosService.find(): args = [{"titel":"Z"}]
2016-04-10T19:06:01.352Z - debug: < VideosService.find(): result = <Promise>
2016-04-10T19:06:01.352Z - debug: < VideosRouter.getByQuery(): result = void || undefined
2016-04-10T19:06:01.352Z - debug: < SharedRequestHandler.logRequestHeader(): result = void || undefined
2016-04-10T19:06:01.354Z - debug: getByQuery(): videos = [{"_id":"000000000000000000000001","titel":"Alpha","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Tiervideo","altersbeschränkung":0,"videopfad":"C:/Videos"},{"_id":"000000000000000000000002","titel":"Beta","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Actionvideo","altersbeschränkung":12,"videopfad":"C:/Videos"},{"_id":"000000000000000000000003","titel":"Gamma","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Horrorvideo","altersbeschränkung":18,"videopfad":"C:/Videos"},{"_id":"000000000000000000000004","titel":"Hugo","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Sportvideo","altersbeschränkung":0,"videopfad":"C:/Videos"},{"_id":"000000000000000000000005","titel":"Karl","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Modevideo","altersbeschränkung":0,"videopfad":"C:/Videos"},{"_id":"000000000000000000000006","titel":"Otto","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Tiervideo","altersbeschränkung":0,"videopfad":"C:/Videos"}]
2016-04-10T19:06:05.564Z - debug: > SharedRequestHandler.logRequestHeader(): args = <RequestResponse>
2016-04-10T19:06:05.565Z - debug: Request: headers={
  "host": "localhost:8443",
  "connection": "keep-alive",
  "authorization": "Basic Og==",
  "cache-control": "no-cache",
  "user-agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36",
  "postman-token": "8183cbc0-4493-ff1f-4a10-7ff4d792b87f",
  "accept": "*/*",
  "accept-encoding": "gzip, deflate",
  "accept-language": "de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4"
}
2016-04-10T19:06:05.565Z - debug: Request: protocol="https"
2016-04-10T19:06:05.565Z - debug: Request: hostname="localhost"
2016-04-10T19:06:05.567Z - debug: > VideosRouter.getByQuery(): args = <RequestResponse>
2016-04-10T19:06:05.568Z - debug: queryParams = {"titel":"K"}
2016-04-10T19:06:05.568Z - debug: > VideosService.find(): args = [{"titel":"K"}]
2016-04-10T19:06:05.568Z - debug: < VideosService.find(): result = <Promise>
2016-04-10T19:06:05.568Z - debug: < VideosRouter.getByQuery(): result = void || undefined
2016-04-10T19:06:05.568Z - debug: < SharedRequestHandler.logRequestHeader(): result = void || undefined
2016-04-10T19:06:05.571Z - debug: getByQuery(): videos = [{"_id":"000000000000000000000001","titel":"Alpha","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Tiervideo","altersbeschränkung":0,"videopfad":"C:/Videos"},{"_id":"000000000000000000000002","titel":"Beta","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Actionvideo","altersbeschränkung":12,"videopfad":"C:/Videos"},{"_id":"000000000000000000000003","titel":"Gamma","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Horrorvideo","altersbeschränkung":18,"videopfad":"C:/Videos"},{"_id":"000000000000000000000004","titel":"Hugo","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Sportvideo","altersbeschränkung":0,"videopfad":"C:/Videos"},{"_id":"000000000000000000000005","titel":"Karl","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Modevideo","altersbeschränkung":0,"videopfad":"C:/Videos"},{"_id":"000000000000000000000006","titel":"Otto","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Tiervideo","altersbeschränkung":0,"videopfad":"C:/Videos"}]
2016-04-10T19:06:13.779Z - debug: > SharedRequestHandler.logRequestHeader(): args = <RequestResponse>
2016-04-10T19:06:13.779Z - debug: Request: headers={
  "host": "localhost:8443",
  "connection": "keep-alive",
  "authorization": "Basic Og==",
  "cache-control": "no-cache",
  "user-agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36",
  "postman-token": "bbceeb7d-1e77-8581-3c11-a267e82130eb",
  "accept": "*/*",
  "accept-encoding": "gzip, deflate",
  "accept-language": "de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4"
}
2016-04-10T19:06:13.779Z - debug: Request: protocol="https"
2016-04-10T19:06:13.779Z - debug: Request: hostname="localhost"
2016-04-10T19:06:13.783Z - debug: > VideosRouter.getByQuery(): args = <RequestResponse>
2016-04-10T19:06:13.783Z - debug: queryParams = {"titel":"Gamma"}
2016-04-10T19:06:13.783Z - debug: > VideosService.find(): args = [{"titel":"Gamma"}]
2016-04-10T19:06:13.783Z - debug: < VideosService.find(): result = <Promise>
2016-04-10T19:06:13.783Z - debug: < VideosRouter.getByQuery(): result = void || undefined
2016-04-10T19:06:13.783Z - debug: < SharedRequestHandler.logRequestHeader(): result = void || undefined
2016-04-10T19:06:13.786Z - debug: getByQuery(): videos = [{"_id":"000000000000000000000001","titel":"Alpha","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Tiervideo","altersbeschränkung":0,"videopfad":"C:/Videos"},{"_id":"000000000000000000000002","titel":"Beta","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Actionvideo","altersbeschränkung":12,"videopfad":"C:/Videos"},{"_id":"000000000000000000000003","titel":"Gamma","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Horrorvideo","altersbeschränkung":18,"videopfad":"C:/Videos"},{"_id":"000000000000000000000004","titel":"Hugo","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Sportvideo","altersbeschränkung":0,"videopfad":"C:/Videos"},{"_id":"000000000000000000000005","titel":"Karl","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Modevideo","altersbeschränkung":0,"videopfad":"C:/Videos"},{"_id":"000000000000000000000006","titel":"Otto","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Tiervideo","altersbeschränkung":0,"videopfad":"C:/Videos"}]
2016-04-10T19:06:57.858Z - debug: > SharedRequestHandler.logRequestHeader(): args = <RequestResponse>
2016-04-10T19:06:57.858Z - debug: Request: headers={
  "host": "localhost:8443",
  "connection": "keep-alive",
  "authorization": "Basic Og==",
  "cache-control": "no-cache",
  "user-agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36",
  "postman-token": "600e9ce7-24d9-74d7-07de-fd7235a924c5",
  "accept": "*/*",
  "accept-encoding": "gzip, deflate",
  "accept-language": "de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4"
}
2016-04-10T19:06:57.858Z - debug: Request: protocol="https"
2016-04-10T19:06:57.859Z - debug: Request: hostname="localhost"
2016-04-10T19:06:57.861Z - debug: > VideosRouter.getByQuery(): args = <RequestResponse>
2016-04-10T19:06:57.861Z - debug: queryParams = {"erscheinungsdatum":"2015-02-01"}
2016-04-10T19:06:57.861Z - debug: > VideosService.find(): args = [{"erscheinungsdatum":"2015-02-01"}]
2016-04-10T19:06:57.863Z - debug: < VideosService.find(): result = <Promise>
2016-04-10T19:06:57.863Z - debug: < VideosRouter.getByQuery(): result = void || undefined
2016-04-10T19:06:57.863Z - debug: < SharedRequestHandler.logRequestHeader(): result = void || undefined
2016-04-10T19:06:57.866Z - debug: getByQuery(): videos = [{"_id":"000000000000000000000001","titel":"Alpha","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Tiervideo","altersbeschränkung":0,"videopfad":"C:/Videos"},{"_id":"000000000000000000000002","titel":"Beta","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Actionvideo","altersbeschränkung":12,"videopfad":"C:/Videos"},{"_id":"000000000000000000000003","titel":"Gamma","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Horrorvideo","altersbeschränkung":18,"videopfad":"C:/Videos"},{"_id":"000000000000000000000004","titel":"Hugo","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Sportvideo","altersbeschränkung":0,"videopfad":"C:/Videos"},{"_id":"000000000000000000000005","titel":"Karl","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Modevideo","altersbeschränkung":0,"videopfad":"C:/Videos"},{"_id":"000000000000000000000006","titel":"Otto","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Tiervideo","altersbeschränkung":0,"videopfad":"C:/Videos"}]
2016-04-10T19:07:24.331Z - debug: > SharedRequestHandler.logRequestHeader(): args = <RequestResponse>
2016-04-10T19:07:24.331Z - debug: Request: headers={
  "host": "localhost:8443",
  "connection": "keep-alive",
  "authorization": "Basic Og==",
  "cache-control": "no-cache",
  "user-agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36",
  "postman-token": "c6c357ee-13fb-763b-7d90-db35533d94fc",
  "accept": "*/*",
  "accept-encoding": "gzip, deflate",
  "accept-language": "de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4"
}
2016-04-10T19:07:24.331Z - debug: Request: protocol="https"
2016-04-10T19:07:24.331Z - debug: Request: hostname="localhost"
2016-04-10T19:07:24.333Z - debug: > VideosRouter.getByQuery(): args = <RequestResponse>
2016-04-10T19:07:24.333Z - debug: queryParams = {"erscheinungsdatum":"2015-02-00"}
2016-04-10T19:07:24.333Z - debug: > VideosService.find(): args = [{"erscheinungsdatum":"2015-02-00"}]
2016-04-10T19:07:24.333Z - debug: < VideosService.find(): result = <Promise>
2016-04-10T19:07:24.334Z - debug: < VideosRouter.getByQuery(): result = void || undefined
2016-04-10T19:07:24.334Z - debug: < SharedRequestHandler.logRequestHeader(): result = void || undefined
2016-04-10T19:11:16.598Z - debug: > SharedRequestHandler.logRequestHeader(): args = <RequestResponse>
2016-04-10T19:11:16.598Z - debug: Request: headers={
  "host": "localhost:8443",
  "connection": "keep-alive",
  "authorization": "Basic Og==",
  "cache-control": "no-cache",
  "user-agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36",
  "postman-token": "5fa13564-8abe-3d54-1d34-621abb0189b3",
  "accept": "*/*",
  "accept-encoding": "gzip, deflate",
  "accept-language": "de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4"
}
2016-04-10T19:11:16.598Z - debug: Request: protocol="https"
2016-04-10T19:11:16.598Z - debug: Request: hostname="localhost"
2016-04-10T19:11:16.600Z - debug: > VideosRouter.getByQuery(): args = <RequestResponse>
2016-04-10T19:11:16.600Z - debug: queryParams = {"erscheinungsdatum":"2015-02-01"}
2016-04-10T19:11:16.600Z - debug: > VideosService.find(): args = [{"erscheinungsdatum":"2015-02-01"}]
2016-04-10T19:11:16.600Z - debug: < VideosService.find(): result = <Promise>
2016-04-10T19:11:16.600Z - debug: < VideosRouter.getByQuery(): result = void || undefined
2016-04-10T19:11:16.600Z - debug: < SharedRequestHandler.logRequestHeader(): result = void || undefined
2016-04-10T19:11:16.603Z - debug: getByQuery(): videos = [{"_id":"000000000000000000000001","titel":"Alpha","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Tiervideo","altersbeschränkung":0,"videopfad":"C:/Videos"},{"_id":"000000000000000000000002","titel":"Beta","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Actionvideo","altersbeschränkung":12,"videopfad":"C:/Videos"},{"_id":"000000000000000000000003","titel":"Gamma","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Horrorvideo","altersbeschränkung":18,"videopfad":"C:/Videos"},{"_id":"000000000000000000000004","titel":"Hugo","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Sportvideo","altersbeschränkung":0,"videopfad":"C:/Videos"},{"_id":"000000000000000000000005","titel":"Karl","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Modevideo","altersbeschränkung":0,"videopfad":"C:/Videos"},{"_id":"000000000000000000000006","titel":"Otto","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Tiervideo","altersbeschränkung":0,"videopfad":"C:/Videos"}]
2016-04-10T19:11:37.381Z - debug: > SharedRequestHandler.logRequestHeader(): args = <RequestResponse>
2016-04-10T19:11:37.381Z - debug: Request: headers={
  "host": "localhost:8443",
  "connection": "keep-alive",
  "authorization": "Basic Og==",
  "cache-control": "no-cache",
  "user-agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36",
  "postman-token": "d2da9f41-eb42-13f7-c31b-eb75756f3b9e",
  "accept": "*/*",
  "accept-encoding": "gzip, deflate",
  "accept-language": "de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4"
}
2016-04-10T19:11:37.381Z - debug: Request: protocol="https"
2016-04-10T19:11:37.381Z - debug: Request: hostname="localhost"
2016-04-10T19:11:37.383Z - debug: > SharedRequestHandler.validateMongoId(): args = <RequestResponse>
2016-04-10T19:11:37.383Z - debug: id = 000000000000000000000001
2016-04-10T19:11:37.383Z - debug: > VideosRouter.getById(): args = <RequestResponse>
2016-04-10T19:11:37.384Z - debug: id = 000000000000000000000001
2016-04-10T19:11:37.384Z - debug: > VideosService.findById(): args = ["000000000000000000000001"]
2016-04-10T19:11:37.385Z - debug: < VideosService.findById(): result = <Promise>
2016-04-10T19:11:37.386Z - debug: < VideosRouter.getById(): result = void || undefined
2016-04-10T19:11:37.386Z - debug: < SharedRequestHandler.validateMongoId(): result = void || undefined
2016-04-10T19:11:37.386Z - debug: < SharedRequestHandler.logRequestHeader(): result = void || undefined
2016-04-10T19:11:37.553Z - debug: getById(): video = {"_id":"000000000000000000000001","titel":"Alpha","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Tiervideo","altersbeschränkung":0,"videopfad":"C:/Videos"}
2016-04-10T19:11:49.731Z - debug: > SharedRequestHandler.logRequestHeader(): args = <RequestResponse>
2016-04-10T19:11:49.731Z - debug: Request: headers={
  "host": "localhost:8443",
  "connection": "keep-alive",
  "authorization": "Basic Og==",
  "cache-control": "no-cache",
  "user-agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36",
  "postman-token": "04adcaf2-851d-34e2-cf3b-f7993a022ad2",
  "accept": "*/*",
  "accept-encoding": "gzip, deflate",
  "accept-language": "de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4"
}
2016-04-10T19:11:49.731Z - debug: Request: protocol="https"
2016-04-10T19:11:49.731Z - debug: Request: hostname="localhost"
2016-04-10T19:11:49.733Z - debug: > SharedRequestHandler.validateMongoId(): args = <RequestResponse>
2016-04-10T19:11:49.733Z - debug: id = 000000000000000000000009
2016-04-10T19:11:49.733Z - debug: > VideosRouter.getById(): args = <RequestResponse>
2016-04-10T19:11:49.733Z - debug: id = 000000000000000000000009
2016-04-10T19:11:49.733Z - debug: > VideosService.findById(): args = ["000000000000000000000009"]
2016-04-10T19:11:49.734Z - debug: < VideosService.findById(): result = <Promise>
2016-04-10T19:11:49.734Z - debug: < VideosRouter.getById(): result = void || undefined
2016-04-10T19:11:49.734Z - debug: < SharedRequestHandler.validateMongoId(): result = void || undefined
2016-04-10T19:11:49.734Z - debug: < SharedRequestHandler.logRequestHeader(): result = void || undefined
2016-04-10T19:11:49.735Z - debug: status = 404
2016-04-10T19:23:45.426Z - debug: > SharedRequestHandler.logRequestHeader(): args = <RequestResponse>
2016-04-10T19:23:45.427Z - debug: Request: headers={
  "host": "localhost:8443",
  "connection": "keep-alive",
  "authorization": "Basic Og==",
  "cache-control": "no-cache",
  "user-agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36",
  "postman-token": "3c9c31bb-21ea-6671-15e9-b65d0ce72b30",
  "accept": "*/*",
  "accept-encoding": "gzip, deflate",
  "accept-language": "de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4"
}
2016-04-10T19:23:45.427Z - debug: Request: protocol="https"
2016-04-10T19:23:45.427Z - debug: Request: hostname="localhost"
2016-04-10T19:23:45.428Z - debug: > VideosRouter.getByQuery(): args = <RequestResponse>
2016-04-10T19:23:45.428Z - debug: queryParams = {"erscheinungsdatum":"2015-02-00"}
2016-04-10T19:23:45.428Z - debug: > VideosService.find(): args = [{"erscheinungsdatum":"2015-02-00"}]
2016-04-10T19:23:45.428Z - debug: < VideosService.find(): result = <Promise>
2016-04-10T19:23:45.429Z - debug: < VideosRouter.getByQuery(): result = void || undefined
2016-04-10T19:23:45.429Z - debug: < SharedRequestHandler.logRequestHeader(): result = void || undefined
2016-04-10T19:24:15.290Z - debug: > SharedRequestHandler.logRequestHeader(): args = <RequestResponse>
2016-04-10T19:24:15.290Z - debug: Request: headers={
  "host": "localhost:8443",
  "connection": "keep-alive",
  "authorization": "Basic Og==",
  "cache-control": "no-cache",
  "user-agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36",
  "postman-token": "74677d59-c6b6-9e4b-c7ed-d55ca448d8ba",
  "accept": "*/*",
  "accept-encoding": "gzip, deflate",
  "accept-language": "de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4"
}
2016-04-10T19:24:15.290Z - debug: Request: protocol="https"
2016-04-10T19:24:15.290Z - debug: Request: hostname="localhost"
2016-04-10T19:24:15.292Z - debug: > VideosRouter.getByQuery(): args = <RequestResponse>
2016-04-10T19:24:15.293Z - debug: queryParams = {"altersbeschränkung":"18"}
2016-04-10T19:24:15.293Z - debug: > VideosService.find(): args = [{"altersbeschränkung":"18"}]
2016-04-10T19:24:15.294Z - debug: < VideosService.find(): result = <Promise>
2016-04-10T19:24:15.294Z - debug: < VideosRouter.getByQuery(): result = void || undefined
2016-04-10T19:24:15.294Z - debug: < SharedRequestHandler.logRequestHeader(): result = void || undefined
2016-04-10T19:24:15.296Z - debug: getByQuery(): videos = [{"_id":"000000000000000000000003","titel":"Gamma","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Horrorvideo","altersbeschränkung":18,"videopfad":"C:/Videos"}]
2016-04-10T19:24:48.403Z - debug: > SharedRequestHandler.logRequestHeader(): args = <RequestResponse>
2016-04-10T19:24:48.403Z - debug: Request: headers={
  "host": "localhost:8443",
  "connection": "keep-alive",
  "authorization": "Basic Og==",
  "cache-control": "no-cache",
  "user-agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36",
  "postman-token": "661557ea-94d5-9f76-b8d8-b85fa6e826d8",
  "accept": "*/*",
  "accept-encoding": "gzip, deflate",
  "accept-language": "de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4"
}
2016-04-10T19:24:48.403Z - debug: Request: protocol="https"
2016-04-10T19:24:48.403Z - debug: Request: hostname="localhost"
2016-04-10T19:24:48.404Z - debug: > VideosRouter.getByQuery(): args = <RequestResponse>
2016-04-10T19:24:48.404Z - debug: queryParams = {"altersbeschränkung":"11"}
2016-04-10T19:24:48.404Z - debug: > VideosService.find(): args = [{"altersbeschränkung":"11"}]
2016-04-10T19:24:48.404Z - debug: < VideosService.find(): result = <Promise>
2016-04-10T19:24:48.404Z - debug: < VideosRouter.getByQuery(): result = void || undefined
2016-04-10T19:24:48.404Z - debug: < SharedRequestHandler.logRequestHeader(): result = void || undefined
2016-04-10T19:24:48.405Z - debug: getByQuery(): videos = []
2016-04-10T19:24:48.405Z - debug: status = 404
2016-04-10T19:25:47.255Z - debug: > SharedRequestHandler.logRequestHeader(): args = <RequestResponse>
2016-04-10T19:25:47.255Z - debug: Request: headers={
  "host": "localhost:8443",
  "connection": "keep-alive",
  "authorization": "Basic Og==",
  "cache-control": "no-cache",
  "user-agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36",
  "postman-token": "b4b35b69-7adf-42f3-a708-e61936984610",
  "accept": "*/*",
  "accept-encoding": "gzip, deflate",
  "accept-language": "de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4"
}
2016-04-10T19:25:47.255Z - debug: Request: protocol="https"
2016-04-10T19:25:47.255Z - debug: Request: hostname="localhost"
2016-04-10T19:25:47.256Z - debug: > VideosRouter.getByQuery(): args = <RequestResponse>
2016-04-10T19:25:47.256Z - debug: queryParams = {}
2016-04-10T19:25:47.256Z - debug: > VideosService.find(): args = [{}]
2016-04-10T19:25:47.256Z - debug: < VideosService.find(): result = <Promise>
2016-04-10T19:25:47.256Z - debug: < VideosRouter.getByQuery(): result = void || undefined
2016-04-10T19:25:47.256Z - debug: < SharedRequestHandler.logRequestHeader(): result = void || undefined
2016-04-10T19:25:47.263Z - debug: getByQuery(): videos = [{"_id":"000000000000000000000001","titel":"Alpha","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Tiervideo","altersbeschränkung":0,"videopfad":"C:/Videos"},{"_id":"000000000000000000000002","titel":"Beta","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Actionvideo","altersbeschränkung":12,"videopfad":"C:/Videos"},{"_id":"000000000000000000000003","titel":"Gamma","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Horrorvideo","altersbeschränkung":18,"videopfad":"C:/Videos"},{"_id":"000000000000000000000004","titel":"Hugo","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Sportvideo","altersbeschränkung":0,"videopfad":"C:/Videos"},{"_id":"000000000000000000000005","titel":"Karl","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Modevideo","altersbeschränkung":0,"videopfad":"C:/Videos"},{"_id":"000000000000000000000006","titel":"Otto","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Tiervideo","altersbeschränkung":0,"videopfad":"C:/Videos"}]
2016-04-10T19:26:43.312Z - debug: > SharedRequestHandler.logRequestHeader(): args = <RequestResponse>
2016-04-10T19:26:43.312Z - debug: Request: headers={
  "host": "localhost:8443",
  "connection": "keep-alive",
  "content-length": "0",
  "authorization": "Basic Og==",
  "postman-token": "8e033b8b-3737-2b47-fbbe-6708e04dd4e9",
  "cache-control": "no-cache",
  "origin": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
  "user-agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36",
  "content-type": "application/x-www-form-urlencoded",
  "accept": "*/*",
  "accept-encoding": "gzip, deflate",
  "accept-language": "de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4"
}
2016-04-10T19:26:43.312Z - debug: Request: protocol="https"
2016-04-10T19:26:43.312Z - debug: Request: hostname="localhost"
2016-04-10T19:26:43.318Z - debug: < SharedRequestHandler.logRequestHeader(): result = void || undefined
2016-04-10T19:27:04.225Z - debug: > SharedRequestHandler.logRequestHeader(): args = <RequestResponse>
2016-04-10T19:27:04.226Z - debug: Request: headers={
  "host": "localhost:8443",
  "connection": "keep-alive",
  "authorization": "Basic YWRtaW46cA==",
  "cache-control": "no-cache",
  "user-agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36",
  "postman-token": "b95a321b-e223-44ac-6091-2dc72db8f237",
  "accept": "*/*",
  "accept-encoding": "gzip, deflate",
  "accept-language": "de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4"
}
2016-04-10T19:27:04.226Z - debug: Request: protocol="https"
2016-04-10T19:27:04.226Z - debug: Request: hostname="localhost"
2016-04-10T19:27:04.227Z - debug: > VideosRouter.getByQuery(): args = <RequestResponse>
2016-04-10T19:27:04.228Z - debug: queryParams = {}
2016-04-10T19:27:04.228Z - debug: > VideosService.find(): args = [{}]
2016-04-10T19:27:04.228Z - debug: < VideosService.find(): result = <Promise>
2016-04-10T19:27:04.228Z - debug: < VideosRouter.getByQuery(): result = void || undefined
2016-04-10T19:27:04.228Z - debug: < SharedRequestHandler.logRequestHeader(): result = void || undefined
2016-04-10T19:27:04.232Z - debug: getByQuery(): videos = [{"_id":"000000000000000000000001","titel":"Alpha","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Tiervideo","altersbeschränkung":0,"videopfad":"C:/Videos"},{"_id":"000000000000000000000002","titel":"Beta","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Actionvideo","altersbeschränkung":12,"videopfad":"C:/Videos"},{"_id":"000000000000000000000003","titel":"Gamma","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Horrorvideo","altersbeschränkung":18,"videopfad":"C:/Videos"},{"_id":"000000000000000000000004","titel":"Hugo","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Sportvideo","altersbeschränkung":0,"videopfad":"C:/Videos"},{"_id":"000000000000000000000005","titel":"Karl","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Modevideo","altersbeschränkung":0,"videopfad":"C:/Videos"},{"_id":"000000000000000000000006","titel":"Otto","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Tiervideo","altersbeschränkung":0,"videopfad":"C:/Videos"}]
2016-04-10T19:27:47.948Z - debug: > SharedRequestHandler.logRequestHeader(): args = <RequestResponse>
2016-04-10T19:27:47.949Z - debug: Request: headers={
  "host": "localhost:8443",
  "connection": "keep-alive",
  "content-length": "0",
  "authorization": "Basic YWRtaW46cA==",
  "postman-token": "a4f54f20-1f92-e9ae-19af-8a0307f6b404",
  "cache-control": "no-cache",
  "origin": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
  "user-agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36",
  "content-type": "application/x-www-form-urlencoded",
  "accept": "*/*",
  "accept-encoding": "gzip, deflate",
  "accept-language": "de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4"
}
2016-04-10T19:27:47.950Z - debug: Request: protocol="https"
2016-04-10T19:27:47.950Z - debug: Request: hostname="localhost"
2016-04-10T19:27:47.951Z - debug: < SharedRequestHandler.logRequestHeader(): result = void || undefined
2016-04-10T19:28:37.277Z - debug: > SharedRequestHandler.logRequestHeader(): args = <RequestResponse>
2016-04-10T19:28:37.277Z - debug: Request: headers={
  "host": "localhost:8443",
  "connection": "keep-alive",
  "authorization": "Basic YWRtaW46cA==",
  "cache-control": "no-cache",
  "user-agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36",
  "postman-token": "afb8911e-3e9d-f621-325f-4fcd1b68fad5",
  "accept": "*/*",
  "accept-encoding": "gzip, deflate",
  "accept-language": "de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4"
}
2016-04-10T19:28:37.277Z - debug: Request: protocol="https"
2016-04-10T19:28:37.277Z - debug: Request: hostname="localhost"
2016-04-10T19:28:37.279Z - debug: > VideosRouter.getByQuery(): args = <RequestResponse>
2016-04-10T19:28:37.279Z - debug: queryParams = {}
2016-04-10T19:28:37.279Z - debug: > VideosService.find(): args = [{}]
2016-04-10T19:28:37.279Z - debug: < VideosService.find(): result = <Promise>
2016-04-10T19:28:37.279Z - debug: < VideosRouter.getByQuery(): result = void || undefined
2016-04-10T19:28:37.279Z - debug: < SharedRequestHandler.logRequestHeader(): result = void || undefined
2016-04-10T19:28:37.282Z - debug: getByQuery(): videos = [{"_id":"000000000000000000000001","titel":"Alpha","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Tiervideo","altersbeschränkung":0,"videopfad":"C:/Videos"},{"_id":"000000000000000000000002","titel":"Beta","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Actionvideo","altersbeschränkung":12,"videopfad":"C:/Videos"},{"_id":"000000000000000000000003","titel":"Gamma","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Horrorvideo","altersbeschränkung":18,"videopfad":"C:/Videos"},{"_id":"000000000000000000000004","titel":"Hugo","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Sportvideo","altersbeschränkung":0,"videopfad":"C:/Videos"},{"_id":"000000000000000000000005","titel":"Karl","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Modevideo","altersbeschränkung":0,"videopfad":"C:/Videos"},{"_id":"000000000000000000000006","titel":"Otto","erscheinungsdatum":"2015-02-01T00:00:00.000Z","beschreibung":"Das ist ein Tiervideo","altersbeschränkung":0,"videopfad":"C:/Videos"}]
2016-04-10T19:29:20.334Z - debug: > SharedRequestHandler.logRequestHeader(): args = <RequestResponse>
2016-04-10T19:29:20.334Z - debug: Request: headers={
  "host": "localhost:8443",
  "connection": "keep-alive",
  "authorization": "Basic YWRtaW46cA==",
  "postman-token": "7432fd44-1ed9-ae92-1418-df3318db900a",
  "cache-control": "no-cache",
  "origin": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
  "user-agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36",
  "content-type": "application/x-www-form-urlencoded",
  "accept": "*/*",
  "accept-encoding": "gzip, deflate",
  "accept-language": "de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4"
}
2016-04-10T19:29:20.334Z - debug: Request: protocol="https"
2016-04-10T19:29:20.334Z - debug: Request: hostname="localhost"
2016-04-10T19:29:20.336Z - debug: > SharedRequestHandler.validateMongoId(): args = <RequestResponse>
2016-04-10T19:29:20.336Z - debug: id = 000000000000000000000006
2016-04-10T19:29:20.336Z - debug: < SharedRequestHandler.validateMongoId(): result = void || undefined
2016-04-10T19:29:20.337Z - debug: < SharedRequestHandler.logRequestHeader(): result = void || undefined
2016-04-11T08:44:19.231Z - info: Logging durch Winston ist konfiguriert
2016-04-11T08:44:19.360Z - debug: > Server.start()
2016-04-11T08:44:19.373Z - debug: < Server.start(): result = void || undefined
2016-04-11T08:44:19.384Z - info: Der Server ist gestartet: https://localhost:8443
2016-04-11T08:44:19.485Z - info: Die Verbindung zu MongoDB ist hergestellt
